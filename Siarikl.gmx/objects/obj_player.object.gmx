<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mspeed = 8;
setspeed = mspeed;
movekey = true;
global.currenthealth = global.maxhealth;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//If game is paused
if instance_number(obj_pause) == 0 {

if movekey == true &amp;&amp; instance_number(obj_cmdinput) == 0{
//Keyboard movement
up = keyboard_check(global.keyboard[0]);
left = keyboard_check(global.keyboard[1]);
down = keyboard_check(global.keyboard[2]);
right = keyboard_check(global.keyboard[3]);

if (up || down) &amp;&amp; (left || right){
    setspeed = floor(sqrt(mspeed*mspeed/2));
    }else{
    setspeed = mspeed;
    }

if up {
    if place_free(x,y-8){
        y -= setspeed;
        }
    }

if left{
    if place_free(x-8,y){
        x -= setspeed;
    }
}

if down{
    if place_free(x,y+8){
        y += setspeed;
    }
}

if right{
    if place_free(x+8,y){
        x += setspeed;
    }
}
}else{
    


}


//Smooth camera
view_xview[0] += (x - view_wview[0]/2 - view_xview[0]) * 0.05;
view_yview[0] += (y - view_hview[0]/2 - view_yview[0]) * 0.05;

//Health
if global.currenthealth &lt;= 0{
    instance_create(0,0,obj_dead);
}
if global.currenthealth &gt; global.maxhealth{
    if global.currenthealth - global.healthregen - 5 &lt; global.maxhealth {
        global.currenthealth = global.maxhealth;
    }else{
        global.currenthealth -= global.healthregen * 5;
    }
    
}

if global.currenthealth &lt; global.maxhealth{
    global.currenthealth = global.currenthealth + global.healthregen; 
    //global.currenthealth += global.healthregen;
}


}


//Pause
if keyboard_check_pressed(vk_escape){
    command("pause");
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>32,32</point>
  </PhysicsShapePoints>
</object>
